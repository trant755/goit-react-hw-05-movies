{"version":3,"file":"static/js/779.e9bea42a.chunk.js","mappings":"4PAEaA,EAAcC,EAAAA,GAAAA,GAAH,kJAEP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPC,EAAcJ,EAAAA,GAAAA,GAAH,+EAEH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITE,EAAQL,EAAAA,GAAAA,GAAH,iDACC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SCsBpB,EAjCgB,WACd,IAAQG,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,IAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBN,GACjBO,MAAK,SAAAC,GAAG,OAAIJ,EAAWI,EAAIC,QAAnB,IAERC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACX,IAECG,EAEL,OACE,SAACW,EAAAA,IAAD,CAAKnB,EAAG,EAAR,UACE,SAAC,EAAD,UACsB,IAAnBQ,EAAQY,QACP,qCAEAZ,EAAQa,KAAI,SAAAC,GACV,OACE,UAAC,EAAD,YACE,SAAC,EAAD,UAAWA,EAAOC,UAClB,uBAAID,EAAOE,YAFQF,EAAOG,GAK/B,OAKV,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: unset;\n  padding-top: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-right: ${p => p.theme.space[5]}px; ;\n`;\n\nexport const ReviewsItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n","import { Box } from 'components/Box';\nimport { getMovieReviewsById } from 'helpers/API';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as SC from './Reviews.styled';\n\nconst Reviews = () => {\n  const { moviesId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieReviewsById(moviesId)\n      .then(res => setReviews(res.results))\n\n      .catch(err => console.log(err));\n  }, [moviesId]);\n\n  if (!reviews) return;\n\n  return (\n    <Box p={4}>\n      <SC.ReviewsList>\n        {reviews.length === 0 ? (\n          <p>Not Found</p>\n        ) : (\n          reviews.map(review => {\n            return (\n              <SC.ReviewsItem key={review.id}>\n                <SC.Title>{review.author}</SC.Title>\n                <p>{review.content}</p>\n              </SC.ReviewsItem>\n            );\n          })\n        )}\n      </SC.ReviewsList>\n    </Box>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsList","styled","p","theme","space","ReviewsItem","Title","moviesId","useParams","useState","reviews","setReviews","useEffect","getMovieReviewsById","then","res","results","catch","err","console","log","Box","length","map","review","author","content","id"],"sourceRoot":""}